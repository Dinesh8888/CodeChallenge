{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CustomerComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"a\", 3);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_tr_27_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const customer_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editCustomer(customer_r1.id));\n    });\n    i0.ɵɵtext(21, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\")(23, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_tr_27_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const customer_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCustomer(customer_r1.id));\n    });\n    i0.ɵɵtext(24, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const customer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", \"mailto:\" + customer_r1.email, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(customer_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.phoneNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.countryCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.gender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 9, customer_r1.balance, customer_r1.currency));\n  }\n}\nexport class CustomerComponent {\n  constructor(http, router, baseUrl) {\n    this.http = http;\n    this.router = router;\n    this.customers = []; // Define the customer array\n    this.base = \"\";\n    this.base = baseUrl;\n    //  http.get<Customer[]>(baseUrl + 'customer/customers').subscribe((data) => {\n    //  this.customers = data;\n    //  console.log(data);\n    //  this.base = baseUrl;\n    //}, error => console.error(error));\n  }\n\n  ngOnInit() {\n    // Fetch the list of customers when the component is initialized\n    this.getCustomers();\n  }\n  getCustomers() {\n    // Make an HTTP GET request to retrieve the list of customers\n    this.http.get(this.base + 'customer').subscribe(data => {\n      this.customers = data;\n    });\n  }\n  addCustomer() {\n    // Navigate to the add customer page\n    this.router.navigate(['/customers/add']);\n  }\n  editCustomer(customerId) {\n    // Navigate to the edit customer page with the customer's ID\n    this.router.navigate(['/customers/edit', customerId]);\n  }\n  //// Method to set the currently edited customer\n  //editCustomer(customerId: string): void {\n  //  this.http.post(this.base + `Customer/UpdateCustomer/${customerId}`, this.editingCustomer).subscribe(() => {\n  //    this.getCustomers();\n  //    this.editingCustomer = {\n  //      id: '',\n  //      firstname: '',\n  //      lastname: '',\n  //      email: '',\n  //      phoneNumber: '',\n  //      countryCode: '',\n  //      gender: '',\n  //      balance: 0,\n  //      currency: ''\n  //    }; // Clear the editingCustomer\n  //  });\n  //}\n  deleteCustomer(customerId) {\n    // Make an HTTP DELETE request to delete the customer\n    this.http.delete(this.base + `customer/DeleteCustomer/${customerId}`).subscribe(() => {\n      // Refresh the list of customers after deletion\n      this.getCustomers();\n    });\n  }\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"href\"], [3, \"click\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Customers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 0)(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"CustomerId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Lastname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"phoneNumber\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"countryCode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Balance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"tbody\");\n      i0.ɵɵtemplate(27, CustomerComponent_tr_27_Template, 25, 12, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\")(29, \"button\", 2);\n      i0.ɵɵtext(30, \"Add Customer\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.customers);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CustomerComponent","constructor","http","router","baseUrl","base","ngOnInit","getCustomers","get","subscribe","data","customers","addCustomer","navigate","editCustomer","customerId","deleteCustomer","delete","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\deshm\\source\\repos\\CodeChallenge\\CodeChallenge\\ClientApp\\src\\app\\customer\\customer.component.html","C:\\Users\\deshm\\source\\repos\\CodeChallenge\\CodeChallenge\\ClientApp\\src\\app\\customer\\customer.component.ts"],"sourcesContent":["<div>\r\n  <h2>Customers</h2>\r\n\r\n  <!-- Add a table to display customer data -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th>CustomerId</th>\r\n        <th>Firstname</th>\r\n        <th>Lastname</th>\r\n        <th>Email</th>\r\n        <th>phoneNumber</th>\r\n        <th>countryCode</th>\r\n        <th>Gender</th>\r\n        <th>Balance</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <!-- Use *ngFor to iterate through the customers and display each row -->\r\n      <tr *ngFor=\"let customer of customers\">\r\n        <td>{{ customer.id }}</td>\r\n        <td>{{ customer.firstname }}</td>\r\n        <td>{{ customer.lastname }}</td>\r\n        <td><a [href]=\"'mailto:' + customer.email\">{{ customer.email }}</a></td>\r\n        <td>{{ customer.phoneNumber }}</td>\r\n        <td>{{ customer.countryCode }}</td>\r\n        <td>{{ customer.gender }}</td>\r\n        <td>{{ customer.balance | currency:customer.currency }}</td>\r\n        <td><button (click)=\"editCustomer(customer.id)\">Edit</button></td>\r\n        <td><button (click)=\"deleteCustomer(customer.id)\">Delete</button></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n    <div>\r\n      <button type=\"submit\">Add Customer</button>\r\n    </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from './Customer';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n  customers: Customer[] = []; // Define the customer array\r\n  base: string = \"\";\r\n\r\n\r\n  constructor(private http: HttpClient, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.base = baseUrl;\r\n\r\n    //  http.get<Customer[]>(baseUrl + 'customer/customers').subscribe((data) => {\r\n    //  this.customers = data;\r\n    //  console.log(data);\r\n    //  this.base = baseUrl;\r\n    //}, error => console.error(error));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Fetch the list of customers when the component is initialized\r\n    this.getCustomers();\r\n  }\r\n\r\n  getCustomers(): void {\r\n    // Make an HTTP GET request to retrieve the list of customers\r\n    this.http.get<Customer[]>(this.base + 'customer').subscribe((data) => {\r\n      this.customers = data;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  addCustomer(): void {\r\n    // Navigate to the add customer page\r\n    this.router.navigate(['/customers/add']);\r\n  }\r\n\r\n  editCustomer(customerId: string): void {\r\n    // Navigate to the edit customer page with the customer's ID\r\n    this.router.navigate(['/customers/edit', customerId]);\r\n  }\r\n\r\n  //// Method to set the currently edited customer\r\n  //editCustomer(customerId: string): void {\r\n  //  this.http.post(this.base + `Customer/UpdateCustomer/${customerId}`, this.editingCustomer).subscribe(() => {\r\n  //    this.getCustomers();\r\n  //    this.editingCustomer = {\r\n  //      id: '',\r\n  //      firstname: '',\r\n  //      lastname: '',\r\n  //      email: '',\r\n  //      phoneNumber: '',\r\n  //      countryCode: '',\r\n  //      gender: '',\r\n  //      balance: 0,\r\n  //      currency: ''\r\n  //    }; // Clear the editingCustomer\r\n  //  });\r\n  //}\r\n\r\n  deleteCustomer(customerId: string): void {\r\n    // Make an HTTP DELETE request to delete the customer\r\n    this.http.delete(this.base + `customer/DeleteCustomer/${customerId}`).subscribe(() => {\r\n      // Refresh the list of customers after deletion\r\n      this.getCustomers();\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}