{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-pagination\";\nfunction CustomerComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"a\", 5);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_tr_27_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const customer_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editCustomer(customer_r1.id));\n    });\n    i0.ɵɵelement(21, \"i\", 7);\n    i0.ɵɵtext(22, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"td\")(24, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_tr_27_Template_button_click_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const customer_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCustomer(customer_r1.id));\n    });\n    i0.ɵɵelement(25, \"i\", 9);\n    i0.ɵɵtext(26, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const customer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", \"mailto:\" + customer_r1.email, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(customer_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.phone_Number);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.country_code);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r1.gender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 9, customer_r1.balance, customer_r1.currency));\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    itemsPerPage: a0,\n    currentPage: a1\n  };\n};\nconst _c1 = function () {\n  return [\"/customers/add\"];\n};\nexport class CustomerComponent {\n  constructor(http, router, baseUrl) {\n    this.http = http;\n    this.router = router;\n    this.customers = []; // Define the customer array\n    this.base = \"\";\n    // Pagination properties\n    this.currentPage = 1;\n    this.itemsPerPage = 10; // Number of items to display per page\n    this.base = baseUrl;\n  }\n  ngOnInit() {\n    // Fetch the list of customers when the component is initialized\n    this.getCustomers();\n  }\n  getCustomers() {\n    // Make an HTTP GET request to retrieve the list of customers\n    this.http.get(this.base + 'customer').subscribe(data => {\n      this.customers = data;\n    });\n  }\n  addCustomer() {\n    // Navigate to the add customer page\n    this.router.navigate(['/customers/add']);\n  }\n  editCustomer(customerId) {\n    // Navigate to the edit customer page with the customer's ID\n    this.router.navigate(['/customers/edit', customerId]);\n  }\n  deleteCustomer(customerId) {\n    // Make an HTTP DELETE request to delete the customer\n    this.http.delete(this.base + `customer/DeleteCustomer/${customerId}`).subscribe(() => {\n      // Refresh the list of customers after deletion\n      this.getCustomers();\n    });\n  }\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 34,\n  vars: 9,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pageChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"bi\", \"bi-plus\"], [3, \"href\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bi\", \"bi-pencil\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"bi\", \"bi-trash\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Customers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 0)(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"CustomerId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Lastname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Country Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Balance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"tbody\");\n      i0.ɵɵtemplate(27, CustomerComponent_tr_27_Template, 27, 12, \"tr\", 1);\n      i0.ɵɵpipe(28, \"paginate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"pagination-controls\", 2);\n      i0.ɵɵlistener(\"pageChange\", function CustomerComponent_Template_pagination_controls_pageChange_29_listener($event) {\n        return ctx.currentPage = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\")(31, \"button\", 3);\n      i0.ɵɵelement(32, \"i\", 4);\n      i0.ɵɵtext(33, \" Add Customer \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(28, 2, ctx.customers, i0.ɵɵpureFunction2(5, _c0, ctx.itemsPerPage, ctx.currentPage)));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(8, _c1));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.PaginationControlsComponent, i2.RouterLink, i3.CurrencyPipe, i4.PaginatePipe],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CustomerComponent","constructor","http","router","baseUrl","base","ngOnInit","getCustomers","get","subscribe","data","customers","addCustomer","navigate","editCustomer","customerId","deleteCustomer","delete","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\deshm\\source\\repos\\CodeChallenge\\CodeChallenge\\ClientApp\\src\\app\\customer\\customer.component.html","C:\\Users\\deshm\\source\\repos\\CodeChallenge\\CodeChallenge\\ClientApp\\src\\app\\customer\\customer.component.ts"],"sourcesContent":["<div>\r\n  <h2>Customers</h2>\r\n\r\n  <!-- Add a table to display customer data with Bootstrap table styles -->\r\n  <table class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>CustomerId</th>\r\n        <th>Firstname</th>\r\n        <th>Lastname</th>\r\n        <th>Email</th>\r\n        <th>Phone Number</th>\r\n        <th>Country Code</th>\r\n        <th>Gender</th>\r\n        <th>Balance</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <!-- Use *ngFor to iterate through the customers and display each row -->\r\n      <tr *ngFor=\"let customer of customers | paginate: { itemsPerPage: itemsPerPage, currentPage: currentPage }\">\r\n        <td>{{ customer.id }}</td>\r\n        <td>{{ customer.firstname }}</td>\r\n        <td>{{ customer.lastname }}</td>\r\n        <td><a [href]=\"'mailto:' + customer.email\">{{ customer.email }}</a></td>\r\n        <td>{{ customer.phone_Number }}</td>\r\n        <td>{{ customer.country_code }}</td>\r\n        <td>{{ customer.gender }}</td>\r\n        <td>{{ customer.balance | currency:customer.currency }}</td>\r\n        <td>\r\n          <button class=\"btn btn-primary\" (click)=\"editCustomer(customer.id)\">\r\n            <!-- Add a Bootstrap Icon for Edit -->\r\n            <i class=\"bi bi-pencil\"></i> Edit\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <button class=\"btn btn-danger\" (click)=\"deleteCustomer(customer.id)\">\r\n            <!-- Add a Bootstrap Icon for Delete -->\r\n            <i class=\"bi bi-trash\"></i> Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- Add pagination controls -->\r\n  <pagination-controls (pageChange)=\"currentPage = $event\"></pagination-controls>\r\n\r\n  <div>\r\n    <button class=\"btn btn-success\" type=\"button\" [routerLink]=\"['/customers/add']\">\r\n      <!-- Add a Bootstrap Icon for Add -->\r\n      <i class=\"bi bi-plus\"></i> Add Customer\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from './Customer';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n  customers: Customer[] = []; // Define the customer array\r\n  base: string = \"\";\r\n\r\n  // Pagination properties\r\n  currentPage: number = 1;\r\n  itemsPerPage: number = 10; // Number of items to display per page\r\n\r\n  constructor(private http: HttpClient, private router: Router, @Inject('BASE_URL') baseUrl: string) {\r\n    this.base = baseUrl;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Fetch the list of customers when the component is initialized\r\n    this.getCustomers();\r\n  }\r\n\r\n  getCustomers(): void {\r\n    // Make an HTTP GET request to retrieve the list of customers\r\n    this.http.get<Customer[]>(this.base + 'customer').subscribe((data) => {\r\n      this.customers = data;\r\n    });\r\n  }\r\n\r\n  addCustomer(): void {\r\n    // Navigate to the add customer page\r\n    this.router.navigate(['/customers/add']);\r\n  }\r\n\r\n  editCustomer(customerId: string): void {\r\n    // Navigate to the edit customer page with the customer's ID\r\n    this.router.navigate(['/customers/edit', customerId]);\r\n  }\r\n\r\n  deleteCustomer(customerId: string): void {\r\n    // Make an HTTP DELETE request to delete the customer\r\n    this.http.delete(this.base + `customer/DeleteCustomer/${customerId}`).subscribe(() => {\r\n      // Refresh the list of customers after deletion\r\n      this.getCustomers();\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}